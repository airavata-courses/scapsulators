version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point

    working_directory: ~/scapsulators/audit # directory where steps will run

    docker: # run the steps with Docker
      - image: circleci/openjdk:11-stretch # ...with this image as the primary container; this is where all `steps` will run

    steps: # a collection of executable commands


      - add_ssh_keys:
          fingerprints:
            - "a9:e3:cc:51:62:6b:9c:36:e0:51:a6:5f:ec:27:30:8f"

      - checkout: # check out source code to working directory
         path: ~/scapsulators
        
      - run:
          name: Login to DockerHub
          command: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
   
      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: audit-{{ checksum "pom.xml" }}

      - run:
            name: Get project dependencies
            command: mvn dependency:go-offline

      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: audit-{{ checksum "pom.xml" }}

      - run:
            name: Run test-suite
            command: mvn package
        
      - run:
          name: Build and push Docker image to Dockerhub
          command: mvn clean compile jib:build -Dimage=scapsulators/audit-service:0.0.2
      
      
      - run:
            name: Build Success
            when: on_success
            command: |
              docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
              ssh -oStrictHostKeyChecking=no shubhpatr@scapsulators.ignorelist.com -q <<'EOL'
                  sudo su -
                  cd scapsulators/kubernetes
                  kubectl delete -f audit.yaml
                  git pull
                  kubectl apply -f audit.yaml
              EOL
      



      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
          # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: target/surefire-reports

      - store_artifacts:
          path: target/classes
          destination: audit-api