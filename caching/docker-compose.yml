version: "3"
services:
  mongodb:
    image: mongo:5.0
    hostname: mongodb
    container_name: mongodb
    ports:
      - '27017:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=PROJECT1-ADMIN
      - MONGO_INITDB_ROOT_PASSWORD=Project1-ADS 
    networks:
      - weather-app-network
      
       
  audit:
    image: scapsulators/audit-service:0.0.2
    #build: 
    #  context: ./audit
    container_name: audit-micro
    ports:
      - '8084:8084'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    depends_on:
      - kafka
    networks:
      - weather-app-network
      
  database-connect:
    image: scapsulators/database-connect-service:0.0.3
    container_name: database-connect
    ports:
      - '8082:8082'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    depends_on:
      - kafka
    networks:
      - weather-app-network
   
  zookeeper:
    image: confluentinc/cp-zookeeper:5.1.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - weather-app-network
    

  kafka:
    #image: confluentinc/cp-enterprise-kafka:5.1.1
    image: bitnami/kafka:latest
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "REQUEST_REPORT:1:1,WEATHER_REPORT:1:1,test:1:1"
      #KAFKA_CREATE_TOPICS: "REQUEST_REPORT:1:1"
      ALLOW_PLAINTEXT_LISTENER: yes
    networks:
      - weather-app-network 
     
  redis:
    image: redis:latest
    hostname: redis
    container_name: redis
    ports:
      - '6379:6379'
    networks:
      - weather-app-network
  
  caching:
    image: scapsulators/caching:0.0.1
    hostname: caching
    container_name: caching
    ports:
      - '8086:8086'
    networks:
      - weather-app-network
      
networks:
  weather-app-network:
    name: weather-app-network
    driver: bridge
      
      

     


